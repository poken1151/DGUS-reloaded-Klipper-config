# This file contains pin mappings for the Creality CR-10S Pro. To use
# this config, the firmware should be compiled for the AVR atmega2560.

# Arduino aliases for atmega2560/1280 (Arduino mega) boards
[board_pins arduino-mega]
aliases:
    ar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,
    ar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,
    ar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,
    ar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,
    ar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,
    ar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,
    ar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,
    ar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,
    ar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,
    ar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,
    ar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,
    ar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,
    ar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,
    ar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,
    analog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,
    analog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,
    analog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,
    analog15=PK7,
    # Marlin adds these additional aliases
    ml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,
    ml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,
    ml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,
    ml85=PH7
	
[stepper_x]
step_pin: ar54
dir_pin: ar55
enable_pin: !ar38
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: ^ar3
position_endstop: 0
position_min: 0
position_max: 300
homing_speed: 50
homing_retract_dist: 5

[stepper_y]
step_pin: ar60
dir_pin: !ar61
enable_pin: !ar56
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: ^ar14
position_endstop: 0
position_min: 0
position_max: 310
homing_speed: 50
homing_retract_dist: 5

[stepper_z]
step_pin: ar46
dir_pin: !ar48
enable_pin: !ar62
rotation_distance: 8
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
position_min: -3
position_max: 351

[extruder]
step_pin: ar26
dir_pin: ar28
enable_pin: !ar24
#rotation_distance: 3.45233
rotation_distance: 7.92245
microsteps: 16
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 500.0
max_extrude_only_velocity: 70.0
max_extrude_only_accel: 1000.0
heater_pin: ar10
sensor_type: ATC Semitec 104GT-2
sensor_pin: analog13
control: pid
pid_Kp: 16.882
pid_Ki: 0.647
pid_Kd: 110.155
min_extrude_temp: 170
min_temp: 5
max_temp: 300
pressure_advance: 0.08165

[heater_bed]
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog14
control: pid
pid_Kp: 690.34
pid_Ki: 111.47
pid_Kd: 1068.83
min_temp: 5
max_temp: 140

[fan]
pin: ar9

[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AR0JSUIQ-if00-port0

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 1500
max_z_velocity: 10
max_z_accel: 100

[bltouch]
sensor_pin: ^ar18
control_pin: ar11
pin_move_time: 0.680
#   The amount of time (in seconds) to wait for the BLTouch pin to
#   move up or down. The default is 0.680 seconds.
stow_on_each_sample: False
set_output_mode: 5V
probe_with_touch_mode: True
x_offset: -51.5
y_offset: -13.4
#z_offset: 0
samples: 1
sample_retract_dist: 2
samples_result: average
speed: 15

[screws_tilt_adjust]
screw1: 70.2,287
screw1_name: Rear left screw
screw2: 70.2,47
screw2_name: Front left screw
screw3: 299,47
screw3_name: Front Right screw
screw4: 299,287
screw4_name: Rear Right screw

[safe_z_home]
home_xy_position: 177,155
speed: 80.0
z_hop: 10.0
z_hop_speed: 5.0

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 5, 5
mesh_max: 248, 285
probe_count: 5,5
fade_start: 1
fade_end: 10
fade_target: 0
mesh_pps: 3,3
algorithm: lagrange

[filament_switch_sensor e0_sensor]
switch_pin: ar2
pause_on_runout: False
runout_gcode:
  PAUSE_PARK

[pause_resume]

[respond]
default_type: echo

[gcode_macro G27]
gcode:
  {% set X = params.X|default(20) %}
  {% set Y = params.Y|default(290) %}
  {% set Z = params.Z|default(20) %}
  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G27_state
    G91
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    RESTORE_GCODE_STATE NAME=G27_state MOVE=0
  {% endif %}

[gcode_macro G29]
gcode:
  {% set T = params.T|default(0) %}
  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G29_state
    G90
    G1 Z10 F240
    {% if T|int > 30 %}
      M190 S{T}
    {% endif %}
    BED_MESH_CALIBRATE
    {% if 'S' in params %}
      M140 S{S}
    {% endif %}
    G90
    G1 Z10 F240
    G1 X150 Y155 F6000
    RESTORE_GCODE_STATE NAME=G29_state MOVE=0
  {% endif %}

[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set F = params.F|default(0.5) %}
  {% if 'S' in params %}
    SET_VELOCITY_LIMIT ACCEL={S} ACCEL_TO_DECEL={ S|float * F|float }
  {% else %}
    {% if 'P' in params %}
      {% if 'T' in params %}
        {% if P|int < T|int %}
          SET_VELOCITY_LIMIT ACCEL={P} ACCEL_TO_DECEL={ P|float * F|float }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={T} ACCEL_TO_DECEL={ T|float * F|float }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={P} ACCEL_TO_DECEL={ P|float * F|float }
      {% endif %}
    {% elif 'T' in params %}
      SET_VELOCITY_LIMIT ACCEL={T} ACCEL_TO_DECEL={ T|float * F|float }
    {% endif %}
  {% endif %}

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={Y}
  {% endif %}

[gcode_macro M600]
gcode:
  {% set X = params.X|default(20) %}
  {% set Y = params.Y|default(290) %}
  {% set Z = params.Z|default(20) %}
  {% set E = params.E|default(400) %}
  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE_PARK X{X} Y{Y} Z{Z}
    M702 U{E}
  {% endif %}

[gcode_macro M701]
gcode:
  {% set I = params.I|default(30) %}
  {% set U = params.U|default(400) %}
  {% set P = params.P|default(30) %}
  {% set IF = params.IF|default(180) %}
  {% set UF = params.UF|default(360) %}
  {% set PF = params.PF|default(180) %}
  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M701_state
    M83
    {% if I|int > 0 %}
      G1 E{I} F{IF}
    {% endif %}
    G1 E{U} F{UF}
    {% if P|int > 0 %}
      G1 E{P} F{PF}
    {% endif %}
    RESTORE_GCODE_STATE NAME=M701_state MOVE=0
  {% endif %}

[gcode_macro M702]
gcode:
  {% set I = params.I|default(30) %}
  {% set U = params.U|default(400) %}
  {% set P = params.P|default(8) %}
  {% set IF = params.IF|default(180) %}
  {% set UF = params.UF|default(360) %}
  {% set PF = params.PF|default(180) %}
  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M702_state
    M83
    {% if P|int > 0 %}
      G1 E{P} F{PF}
    {% endif %}
    {% if I|int > 0 %}
      G1 E-{I} F{IF}
    {% endif %}
    G1 E-{U} F{UF}
    RESTORE_GCODE_STATE NAME=M702_state MOVE=0
  {% endif %}

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={E} ADVANCE={K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={K}
    {% endif %}
  {% endif %}

[gcode_macro POWEROFF]
gcode:
  RESPOND TYPE=command MSG=action:poweroff

[gcode_macro NOTIFY]
gcode:
  {% if 'MSG' in params %}
    RESPOND TYPE=command MSG="action:notification {MSG}"
  {% endif %}

[gcode_macro LAZY_HOME]
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}

[gcode_macro RETRACT]
gcode:
  {% set F = params.F|default(600) %}
  {% if 'D' in params %}
    {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
      {action_respond_info("This command cannot be used while printing")}
    {% elif printer.extruder.temperature < 170 %}
      {action_respond_info("Extruder temperature too low")}
    {% else %}
      SAVE_GCODE_STATE NAME=RETRACT_state
      M83
      G1 E-{D} F{F}
      RESTORE_GCODE_STATE NAME=RETRACT_state MOVE=0
    {% endif %}
  {% endif %}

[gcode_macro PAUSE_PARK]
gcode:
  {% set X = params.X|default(20) %}
  {% set Y = params.Y|default(290) %}
  {% set Z = params.Z|default(20) %}
  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE
    RETRACT D=3
    G27 X{X} Y{Y} Z{Z}
  {% endif %}

[gcode_macro PRE_START]
gcode:
  {% set WN = params.WN|default(0.4) %}
  {% set WZ = params.WZ|default(0.25) %}
  {% set Z = params.Z|default(0) %}
  CLEAR_PAUSE
  M106 S0
  M220 S100
  M221 S100
  M900 K0
  DGUS_PRINT_START
  G28
  WIPE_LINE Z={WZ} N={WN}

[gcode_macro POST_END]
gcode:
  CLEAR_PAUSE
  DGUS_PRINT_END
  M220 S100
  M221 S100
  M900 K0
  {% if printer.extruder.temperature >= 170 %}
    M83
    G91
    G1 E-2 F2400
    G1 E-2 Z5 F2400
  {% endif %}
  M82
  G90
  G27
  M104 S0
  M140 S0
  M106 S0
  M84 X Y E
  SAVE_IF_SET

[gcode_macro WIPE_LINE]
gcode:
  {% set N = params.N|default(0.4) %}
  {% set Z = params.Z|default(0.25) %}
  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=WIPE_LINE_state
    M82
    G90
    G92 E0
    G1 X10 Y20 Z5 F3000
    G1 Z{Z} F3000
    G1 X10 Y150 F1500 E10.83
    G1 X{ N|float + 10.0 } F5000
    G1 Y22 F1500 E21.5
    G1 Y20 F5000
    RESTORE_GCODE_STATE NAME=WIPE_LINE_state MOVE=0
  {% endif %}

[gcode_macro SAVE_AT_END]
variable_save: 0
gcode:
  SET_GCODE_VARIABLE MACRO=SAVE_AT_END VARIABLE=save VALUE=1

[gcode_macro SAVE_IF_SET]
gcode:
  {% if printer["gcode_macro SAVE_AT_END"].save == 1 %}
    SAVE_CONFIG
  {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 1.147
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.240000, 0.037500, -0.042500, 0.015000, 0.180000
#*# 	  0.207500, 0.015000, -0.082500, -0.035000, 0.075000
#*# 	  0.240000, 0.030000, -0.085000, -0.050000, 0.110000
#*# 	  0.155000, -0.030000, -0.135000, -0.090000, 0.062500
#*# 	  0.187500, -0.030000, -0.087500, -0.055000, 0.137500
#*# tension = 0.2
#*# min_x = 5.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 3
#*# min_y = 5.0
#*# x_count = 5
#*# max_y = 285.0
#*# mesh_x_pps = 3
#*# max_x = 248.0
#*#
#*# [bed_mesh p5_6_21]
#*# version = 1
#*# points =
#*# 	0.182500, 0.040000, -0.072500, -0.035000, 0.217500
#*# 	0.182500, 0.010000, -0.070000, -0.035000, 0.132500
#*# 	0.152500, 0.025000, -0.025000, 0.030000, 0.262500
#*# 	0.115000, -0.052500, -0.140000, -0.097500, 0.077500
#*# 	0.137500, -0.050000, -0.125000, -0.075000, 0.152500
#*# tension = 0.2
#*# min_x = 5.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 5
#*# max_y = 285.0
#*# mesh_x_pps = 2
#*# max_x = 248.0
#*#
#*# [bed_mesh screw_cali_results_010706]
#*# version = 1
#*# points =
#*# 	0.270000, 0.090000, -0.002500, 0.035000, 0.220000
#*# 	0.225000, 0.055000, -0.017500, -0.005000, 0.140000
#*# 	0.240000, 0.075000, -0.035000, -0.005000, 0.135000
#*# 	0.190000, 0.020000, -0.077500, -0.045000, 0.110000
#*# 	0.267500, 0.072500, -0.035000, 0.010000, 0.192500
#*# tension = 0.2
#*# min_x = 5.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 5
#*# max_y = 285.0
#*# mesh_x_pps = 2
#*# max_x = 248.0
